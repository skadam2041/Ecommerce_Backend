server.port=8080
spring.datasource.url=jdbc:mysql://localhost:3306/Ecommerce_ProductCatalog
spring.datasource.username=root
spring.datasource.password=suraj2041
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.main.allow-bean-definition-overriding=true
#resorce server
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://127.0.0.1:9090

client registration

spring.security.oauth2.client.registration.product-client-oidc.provider=spring
spring.security.oauth2.client.registration.product-client-oidc.client-id=product-service
spring.security.oauth2.client.registration.product-client-oidc.client-secret=secret
spring.security.oauth2.client.registration.product-client-oidc.authorization-grant-type[0]=authorization_code
spring.security.oauth2.client.registration.product-client-oidc.authorization-grant-type[1]=client_credentials
spring.security.oauth2.client.registration.product-client-oidc.authorization-grant-type[2]=refresh_token
spring.security.oauth2.client.registration.product-client-oidc.redirect-uri=http://127.0.0.1:8080/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.product-client-oidc.scope[0]=openid
spring.security.oauth2.client.registration.product-client-oidc.scope[1]=profile
spring.security.oauth2.client.registration.product-client-oidc.client-name=product-client-oidc


spring.security.oauth2.client.registration.product-service-authorization-code.provider=spring
spring.security.oauth2.client.registration.product-service-authorization-code.client-id=product-service
spring.security.oauth2.client.registration.product-service-authorization-code.client-secret=secret
spring.security.oauth2.client.registration.product-service-authorization-code.authorization-grant-type[0]=authorization_code
spring.security.oauth2.client.registration.product-service-authorization-code.authorization-grant-type[1]=client_credentials
spring.security.oauth2.client.registration.product-service-authorization-code.authorization-grant-type[2]=refresh_token
spring.security.oauth2.client.registration.product-service-authorization-code.redirect-uri=http://127.0.0.1:8080/authorized
spring.security.oauth2.client.registration.product-service-authorization-code.scope[0]=openid
spring.security.oauth2.client.registration.product-service-authorization-code.scope[1]=profile
spring.security.oauth2.client.registration.product-service-authorization-code.scope[2]=product.read
spring.security.oauth2.client.registration.product-service-authorization-code.client-name=product-service-authorization-code
#
spring.security.oauth2.client.provider.spring.issuer-uri=http://127.0.0.1:9090





#server:
#  port: 8080
#
#spring:
#  main:
#    allow-bean-definition-overriding: true
#  datasource:
#    url: jdbc:mysql://localhost:3306/Ecommerce_ProductCatalog
#    username: root
#    password: suraj2041
#    driver-class-name: com.mysql.cj.jdbc.Driver
#  jpa:
#    show-sql: true
#    hibernate:
#      ddl-auto: update
#  security:
#    oauth2:
#      client:
#        registration:
#          api-client-oidc:
#            provider: spring
#            client-id: api-client
#            client-secret: secret
#            authorization-grant-type: authorization_code
#            redirect-uri: "http://127.0.0.1:8080/login/oauth2/code/{registrationId}"
#            scope: openid
#            client-name: api-client-oidc
#          api-client-authorization-code:
#            provider: spring
#            client-id: api-client
#            client-secret: secret
#            authorization-grant-type: authorization_code
#            redirect-uri: "http://127.0.0.1:8080/authorized"
#            scope: api.read
#            client-name: api-client-authorization-code
#        provider:
#          spring:
#            issuer-uri: http://127.0.0.1:9090
